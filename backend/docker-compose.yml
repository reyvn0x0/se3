version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: stundenplan_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DB:-stundenplan_db}
      MYSQL_USER: ${MYSQL_USER:-stundenplan_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-userpassword}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - stundenplan_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Flask Backend
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: stundenplan_backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_USER:-stundenplan_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-userpassword}
      - MYSQL_DB=${MYSQL_DB:-stundenplan_db}
      - SECRET_KEY=${SECRET_KEY:-change-this-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-change-this-too}
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - stundenplan_network

volumes:
  mysql_data:
    driver: local

networks:
  stundenplan_network:
    driver: bridge
